//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rebtel.UserManagement.Infrastructure.UserManagementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateUser", Namespace="http://schemas.datacontract.org/2004/07/Rebtel.UserManagement.Infrastructure.DTO")]
    [System.SerializableAttribute()]
    public partial class CreateUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateUserResponse", Namespace="http://schemas.datacontract.org/2004/07/Rebtel.UserManagement.Infrastructure.DTO." +
        "Response")]
    [System.SerializableAttribute()]
    public partial class CreateUserResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddSubcriptionToUser", Namespace="http://schemas.datacontract.org/2004/07/Rebtel.UserManagement.Infrastructure.DTO")]
    [System.SerializableAttribute()]
    public partial class AddSubcriptionToUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubscriptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubscriptionId {
            get {
                return this.SubscriptionIdField;
            }
            set {
                if ((this.SubscriptionIdField.Equals(value) != true)) {
                    this.SubscriptionIdField = value;
                    this.RaisePropertyChanged("SubscriptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://schemas.datacontract.org/2004/07/Rebtel.UserManagement.Infrastructure.DTO." +
        "Response")]
    [System.SerializableAttribute()]
    public partial class UserData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Rebtel.UserManagement.Infrastructure.UserManagementService.SubscriptionData[] SubscriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPriceIncVatAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalcallminutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Rebtel.UserManagement.Infrastructure.UserManagementService.SubscriptionData[] Subscriptions {
            get {
                return this.SubscriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionsField, value) != true)) {
                    this.SubscriptionsField = value;
                    this.RaisePropertyChanged("Subscriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPriceIncVatAmount {
            get {
                return this.TotalPriceIncVatAmountField;
            }
            set {
                if ((this.TotalPriceIncVatAmountField.Equals(value) != true)) {
                    this.TotalPriceIncVatAmountField = value;
                    this.RaisePropertyChanged("TotalPriceIncVatAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Totalcallminutes {
            get {
                return this.TotalcallminutesField;
            }
            set {
                if ((this.TotalcallminutesField.Equals(value) != true)) {
                    this.TotalcallminutesField = value;
                    this.RaisePropertyChanged("Totalcallminutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionData", Namespace="http://schemas.datacontract.org/2004/07/Rebtel.UserManagement.Infrastructure.DTO." +
        "Response")]
    [System.SerializableAttribute()]
    public partial class SubscriptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallminutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceIncVatAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Callminutes {
            get {
                return this.CallminutesField;
            }
            set {
                if ((this.CallminutesField.Equals(value) != true)) {
                    this.CallminutesField = value;
                    this.RaisePropertyChanged("Callminutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PriceIncVatAmount {
            get {
                return this.PriceIncVatAmountField;
            }
            set {
                if ((this.PriceIncVatAmountField.Equals(value) != true)) {
                    this.PriceIncVatAmountField = value;
                    this.RaisePropertyChanged("PriceIncVatAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserManagementService.IUserManagement")]
    public interface IUserManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateUser", ReplyAction="http://tempuri.org/IUserManagement/CreateUserResponse")]
        Rebtel.UserManagement.Infrastructure.UserManagementService.CreateUserResponse CreateUser(Rebtel.UserManagement.Infrastructure.UserManagementService.CreateUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateUser", ReplyAction="http://tempuri.org/IUserManagement/CreateUserResponse")]
        System.Threading.Tasks.Task<Rebtel.UserManagement.Infrastructure.UserManagementService.CreateUserResponse> CreateUserAsync(Rebtel.UserManagement.Infrastructure.UserManagementService.CreateUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/AddSubscriptionToUser", ReplyAction="http://tempuri.org/IUserManagement/AddSubscriptionToUserResponse")]
        void AddSubscriptionToUser(Rebtel.UserManagement.Infrastructure.UserManagementService.AddSubcriptionToUser addSubcriptionToUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/AddSubscriptionToUser", ReplyAction="http://tempuri.org/IUserManagement/AddSubscriptionToUserResponse")]
        System.Threading.Tasks.Task AddSubscriptionToUserAsync(Rebtel.UserManagement.Infrastructure.UserManagementService.AddSubcriptionToUser addSubcriptionToUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/DeleteUser", ReplyAction="http://tempuri.org/IUserManagement/DeleteUserResponse")]
        void DeleteUser(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/DeleteUser", ReplyAction="http://tempuri.org/IUserManagement/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetUserById", ReplyAction="http://tempuri.org/IUserManagement/GetUserByIdResponse")]
        Rebtel.UserManagement.Infrastructure.UserManagementService.UserData GetUserById(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetUserById", ReplyAction="http://tempuri.org/IUserManagement/GetUserByIdResponse")]
        System.Threading.Tasks.Task<Rebtel.UserManagement.Infrastructure.UserManagementService.UserData> GetUserByIdAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetUsers", ReplyAction="http://tempuri.org/IUserManagement/GetUsersResponse")]
        Rebtel.UserManagement.Infrastructure.UserManagementService.UserData[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetUsers", ReplyAction="http://tempuri.org/IUserManagement/GetUsersResponse")]
        System.Threading.Tasks.Task<Rebtel.UserManagement.Infrastructure.UserManagementService.UserData[]> GetUsersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementChannel : Rebtel.UserManagement.Infrastructure.UserManagementService.IUserManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementClient : System.ServiceModel.ClientBase<Rebtel.UserManagement.Infrastructure.UserManagementService.IUserManagement>, Rebtel.UserManagement.Infrastructure.UserManagementService.IUserManagement {
        
        public UserManagementClient() {
        }
        
        public UserManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rebtel.UserManagement.Infrastructure.UserManagementService.CreateUserResponse CreateUser(Rebtel.UserManagement.Infrastructure.UserManagementService.CreateUser user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<Rebtel.UserManagement.Infrastructure.UserManagementService.CreateUserResponse> CreateUserAsync(Rebtel.UserManagement.Infrastructure.UserManagementService.CreateUser user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public void AddSubscriptionToUser(Rebtel.UserManagement.Infrastructure.UserManagementService.AddSubcriptionToUser addSubcriptionToUser) {
            base.Channel.AddSubscriptionToUser(addSubcriptionToUser);
        }
        
        public System.Threading.Tasks.Task AddSubscriptionToUserAsync(Rebtel.UserManagement.Infrastructure.UserManagementService.AddSubcriptionToUser addSubcriptionToUser) {
            return base.Channel.AddSubscriptionToUserAsync(addSubcriptionToUser);
        }
        
        public void DeleteUser(System.Guid userId) {
            base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(System.Guid userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public Rebtel.UserManagement.Infrastructure.UserManagementService.UserData GetUserById(System.Guid userId) {
            return base.Channel.GetUserById(userId);
        }
        
        public System.Threading.Tasks.Task<Rebtel.UserManagement.Infrastructure.UserManagementService.UserData> GetUserByIdAsync(System.Guid userId) {
            return base.Channel.GetUserByIdAsync(userId);
        }
        
        public Rebtel.UserManagement.Infrastructure.UserManagementService.UserData[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<Rebtel.UserManagement.Infrastructure.UserManagementService.UserData[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
    }
}
